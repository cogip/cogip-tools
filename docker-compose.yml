x-build-console: &build-console
  build:
    context: .
    target: cogip-console

x-build-gui: &build-gui
  build:
    context: .
    target: cogip-gui

x-build-firmware: &build-firmware
  build:
    context: .
    target: cogip-firmware

x-vol-cogip: &vol-cogip
  "./cogip:/src/cogip"

x-vol-run: &vol-run
  "run:/var/run/cogip"

x-vol-pts: &vol-pts
  "/dev/pts:/dev/pts"

x-vol-vscode: &vol-vscode
  "vscode:/root/.vscode-server"

x-volumes-common: &volumes-common
  volumes:
    - *vol-cogip
    - *vol-run
    - *vol-pts
    - *vol-vscode

x-extra-hosts-common: &extra-hosts-common
  extra_hosts:
    host.docker.internal: host-gateway

x-socat: &socat
  <<: *build-console
  volumes:
    - *vol-run
    - *vol-pts
  command:
    - /bin/sh
    - -x
    - -c
    - |
      socat -d -d pty,raw,echo=0,link=/var/run/cogip/ptySTM32-$${ROBOT_ID} pty,raw,echo=0,link=/var/run/cogip/ptyRPI-$${ROBOT_ID} &
      sleep infinity

x-firmware: &firmware
  <<: *build-firmware
  environment: &env-firmware
    FIRMWARE_APP: ${FIRMWARE_APP:-cup2023}
    FIRMWARE_BOARD: ${FIRMWARE_BOARD:-cogip-native}
  stdin_open: true
  tty: true
  working_dir: /simulation/submodules/mcu-firmware
  volumes:
    - *vol-run
    - *vol-pts
    - *vol-vscode
    - ".:/simulation"
  command:
    - /bin/sh
    - -x
    - -c
    - |
      applications/$${FIRMWARE_APP}/bin/$${FIRMWARE_BOARD}/$${FIRMWARE_APP}.elf -c /dev/null -c /var/run/cogip/ptySTM32-$${ROBOT_ID}
  depends_on: &depends-firmware
      make-firmware:
        condition: service_completed_successfully

x-robot: &robot
  <<: [*build-console, *volumes-common, *extra-hosts-common]
  environment: &env-robot
    SERVER_DEBUG:
    SERVER_RELOAD:
    PLANNER_DEBUG:
    PLANNER_RELOAD:
    PLANNER_ROBOT_WIDTH:
    PLANNER_OBSTACLE_RADIUS:
    PLANNER_OBSTACLE_BB_MARGIN:
    PLANNER_OBSTACLE_BB_VERTICES:
    PLANNER_OBSTACLE_SENDER_INTERVAL:
    PLANNER_PATH_REFRESH_INTERVAL:
    COPILOT_RELOAD:
    COPILOT_DEBUG:
    DETECTOR_RELOAD:
    DETECTOR_DEBUG:
    DETECTOR_UART_PORT:
    DETECTOR_UART_SPEED:
    DETECTOR_MIN_DISTANCE:
    DETECTOR_MAX_DISTANCE:
    DETECTOR_BEACON_RADIUS:
    DETECTOR_REFRESH_INTERVAL:
    DETECTOR_EMULATION: 1
  command:
    - /bin/sh
    - -x
    - -c
    - |
      cogip-server &
      wait-for-it -t 0 localhost:809$${ROBOT_ID}
      cogip-planner &
      cogip-copilot --serial-port /var/run/cogip/ptyRPI-$${ROBOT_ID} &
      cogip-detector &
      cogip-dashboard &
      sleep infinity

x-monitor: &monitor
  << : [*build-gui, *extra-hosts-common]
  environment: &env-monitor
    DISPLAY:
    QTWEBENGINE_DISABLE_SANDBOX: 1
    XDG_RUNTIME_DIR:
  command:
    - /bin/sh
    - -x
    - -c
    - |
      wait-for-it -t 0 $${COGIP_SOCKETIO_SERVER_HOST}:$${COGIP_SOCKETIO_SERVER_PORT}
      cogip-monitor http://$${COGIP_SOCKETIO_SERVER_HOST}:$${COGIP_SOCKETIO_SERVER_PORT} &
      sleep infinity
  working_dir: /src
  volumes:
    - *vol-cogip
    - *vol-vscode
    - "./assets:/src/assets"
    - "/tmp/.X11-unix/:/tmp/.X11-unix/"
    - "/dev/dri/:/dev/dri/"
    - "$XDG_RUNTIME_DIR:$XDG_RUNTIME_DIR"

services:
  beacon:
    <<: [*build-console, *extra-hosts-common]
    hostname: beacon
    ports:
      - "8080:8080"
      - "8090:8090"
    environment:
      SERVER_BEACON_MAX_ROBOTS: 4
      SERVER_BEACON_RELOAD:
      SERVER_BEACON_DEBUG:
    volumes:
      - *vol-cogip
      - *vol-vscode
      - "./records:/var/tmp/cogip"
    command:
      - /bin/sh
      - -x
      - -c
      - |
        cogip-server-beacon &
        cogip-dashboard-beacon &
        sleep infinity
    profiles:
      - beacon

  socat1:
    << : *socat
    hostname: socat1
    environment:
      ROBOT_ID: 1
    profiles:
      - robot1

  socat2:
    << : *socat
    hostname: socat2
    environment:
      ROBOT_ID: 2
    profiles:
      - robot2

  socat3:
    << : *socat
    hostname: socat3
    environment:
      ROBOT_ID: 3
    profiles:
      - robot3

  socat4:
    << : *socat
    hostname: socat4
    environment:
      ROBOT_ID: 4
    profiles:
      - robot4

  make-firmware:
    <<: *build-firmware
    environment:
      << : *env-firmware
    working_dir: /simulation/submodules/mcu-firmware
    volumes:
      - ".:/simulation"
    command:
      - /bin/sh
      - -x
      - -c
      - make -C applications/$${FIRMWARE_APP} -j$$(nproc) BOARD=$${FIRMWARE_BOARD}

  firmware1:
    << : *firmware
    hostname: firmware1
    environment:
      << : *env-firmware
      ROBOT_ID: 1
    depends_on:
      << : *depends-firmware
      socat1:
        condition: service_started
    profiles:
      - robot1

  firmware2:
    << : *firmware
    hostname: firmware2
    environment:
      << : *env-firmware
      ROBOT_ID: 2
    depends_on:
      << : *depends-firmware
      socat2:
        condition: service_started
    profiles:
      - robot2

  firmware3:
    << : *firmware
    hostname: firmware3
    environment:
      << : *env-firmware
      ROBOT_ID: 3
    depends_on:
      << : *depends-firmware
      socat2:
        condition: service_started
    profiles:
      - robot3

  firmware4:
    << : *firmware
    hostname: firmware4
    environment:
      << : *env-firmware
      ROBOT_ID: 4
    depends_on:
      << : *depends-firmware
      socat2:
        condition: service_started
    profiles:
      - robot4

  robot1:
    << : *robot
    hostname: robot1
    ports:
      - "8081:8081"
      - "8091:8091"
    environment:
      << : *env-robot
      ROBOT_ID: 1
    depends_on:
      - socat1
    profiles:
      - robot1

  robot2:
    << : *robot
    hostname: robot2
    ports:
      - "8082:8082"
      - "8092:8092"
    environment:
      << : *env-robot
      ROBOT_ID: 2
    depends_on:
      - socat2
    profiles:
      - robot2

  robot3:
    << : *robot
    hostname: robot3
    ports:
      - "8083:8083"
      - "8093:8093"
    environment:
      << : *env-robot
      ROBOT_ID: 3
    depends_on:
      - socat3
    profiles:
      - robot3

  robot4:
    << : *robot
    hostname: robot4
    ports:
      - "8084:8084"
      - "8094:8094"
    environment:
      << : *env-robot
      ROBOT_ID: 4
    depends_on:
      - socat4
    profiles:
      - robot4

  monitor1:
    << : *monitor
    hostname: monitor1
    environment:
      << : *env-monitor
      COGIP_SOCKETIO_SERVER_HOST: robot1
      COGIP_SOCKETIO_SERVER_PORT: 8091
      COGIP_SOCKETIO_SERVER_URL: http://robot1:8091
    depends_on:
      - robot1
    profiles:
      - monitor1

  monitor2:
    << : *monitor
    hostname: monitor2
    environment:
      << : *env-monitor
      COGIP_SOCKETIO_SERVER_HOST: robot2
      COGIP_SOCKETIO_SERVER_PORT: 8092
      COGIP_SOCKETIO_SERVER_URL: http://robot2:8092
    depends_on:
      - robot2
    profiles:
      - monitor2

  monitor3:
    << : *monitor
    hostname: monitor2
    environment:
      << : *env-monitor
      COGIP_SOCKETIO_SERVER_HOST: robot3
      COGIP_SOCKETIO_SERVER_PORT: 8093
      COGIP_SOCKETIO_SERVER_URL: http://robot3:8093
    depends_on:
      - robot3
    profiles:
      - monitor3

  monitor4:
    << : *monitor
    hostname: monitor4
    environment:
      << : *env-monitor
      COGIP_SOCKETIO_SERVER_HOST: robot4
      COGIP_SOCKETIO_SERVER_PORT: 8094
      COGIP_SOCKETIO_SERVER_URL: http://robot4:8094
    depends_on:
      - robot4
    profiles:
      - monitor4

volumes:
  vscode:
  run:
